<?xml version="1.0"?>
<odoo noupdate="0">

    <record id="import_partner" model="import.odbc.dbtable">
        <field name="exec_order" eval="1"/>
        <field name="name">Sincronizar pacientes</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
        _paciente_id as db_external_id,
        CASE
            WHEN nombre is null THEN CONCAT('Paciente S/N ID ', _paciente_id)
            WHEN LEN(nombre) = 0 THEN CONCAT('Paciente S/N ID ', _paciente_id)
            WHEN LEN(nombre) &lt;=2 AND nombre like '%[^a-Z0-9]%' THEN CONCAT('Paciente S/N ID ', _paciente_id)
            ELSE CONCAT(nombre, ' ', apellido)
        END AS name,
        poliza as insurance_policy,
        afiliado as affiliate_number,
        documento as vat,
        'pacient' as partner_type,
        1 as customer_rank
    from pacientes
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="base.model_res_partner"/>
         <field name="skip_cron_start">8.0</field>
         <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_partner_insurance" model="import.odbc.dbtable">
        <field name="exec_order" eval="2"/>
        <field name="name">Sincronizar aseguradora</field>
        <field name="xml_id_cols">db_external_id,partner_type</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
        _seguro_id as db_external_id,
        CASE
            WHEN nombre is null THEN CONCAT('Aseguradora S/N ID ', _seguro_id)
            WHEN LEN(nombre) = 0 THEN CONCAT('Aseguradora S/N ID ', _seguro_id)
            WHEN LEN(nombre) &lt;=2 AND nombre like '%[^a-Z0-9]%' THEN CONCAT('Aseguradora S/N ID ', _seguro_id)
            ELSE nombre
        END AS name,
        rnc as vat,
        CodigoPSS as code_pss,
        1 as customer_rank,
        1 as supplier_rank,
        'insurence' as partner_type
    from Segurodbo
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="base.model_res_partner"/>
         <field name="skip_cron_start">8.0</field>
         <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_partner_institution" model="import.odbc.dbtable">
        <field name="exec_order" eval="3"/>
        <field name="name">Sincronizar compa√±ia</field>
        <field name="xml_id_cols">db_external_id,partner_type</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
        _id_cia as db_external_id,
        CASE
            WHEN nombre is null THEN CONCAT('Compania S/N ID ', _id_cia)
            WHEN LEN(nombre) = 0 THEN CONCAT('Compania S/N ID ', _id_cia)
            WHEN LEN(nombre) &lt;=2 AND nombre like '%[^a-Z0-9]%' THEN CONCAT('Compania S/N ID ', _id_cia)
            ELSE nombre
        END AS name,
        rnc as vat,
        1 as customer_rank,
        1 as supplier_rank,
        'institution' as partner_type
    from Compania
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="base.model_res_partner"/>
         <field name="skip_cron_start">8.0</field>
         <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_products_category" model="import.odbc.dbtable">
        <field name="exec_order" eval="4"/>
        <field name="name">Sincronizar categorias de productos</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
      id as db_external_id,
      CASE
        WHEN nombre is null THEN CONCAT('Departamento S/N ID ', id)
        WHEN LEN(nombre) = 0 THEN CONCAT('Departamento S/N ID ', id)
        ELSE nombre
      END AS name
    from departamentos
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="product.model_product_category"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_products" model="import.odbc.dbtable">
        <field name="exec_order" eval="5"/>
        <field name="name">Sincronizar productos</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
      id as db_external_id,
      descripcion as name,
      CASE
         WHEN descripcion is null THEN CONCAT('Producto S/N ID ', id)
         WHEN LEN(descripcion) = 0 THEN CONCAT('Producto S/N ID ', id)
         WHEN LEN(descripcion) &lt;=2 AND descripcion like '%[^a-Z0-9]%' THEN CONCAT('Producto S/N ID ', id)
         ELSE descripcion
      END AS name,
      CASE
        WHEN _depatamento_id is null THEN 'product.product_category_all'
        WHEN LEN(_depatamento_id) = 0 THEN 'product.product_category_all'
        ELSE CONCAT('__import__.product_category_id_', _depatamento_id)
      END as 'categ_id/id',
      costomanual as standard_price
    from articulo
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="product.model_product_product"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_referrer" model="import.odbc.dbtable">
        <field name="exec_order" eval="10"/>
        <field name="name">Sincronizar referidores</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select
        id_referidor as db_external_id,
        CASE
            WHEN nombre is null THEN CONCAT('Referidor S/N ID ', id_referidor)
            WHEN LEN(nombre) = 0 THEN CONCAT('Referidor S/N ID ', id_referidor)
            WHEN LEN(nombre) &lt;=2 AND nombre like '%[^a-Z0-9]%' THEN CONCAT('Referidor S/N ID ', id_referidor)
            ELSE CONCAT(nombre, ' ', apellido)
        END AS name
        from Referidor
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="diagnosis.model_diagnosis_referrer"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_invoices" model="import.odbc.dbtable">
        <field name="exec_order" eval="15"/>
        <field name="name">Sincronizar Facturas</field>
        <field name="enabled" eval="True"/>
        <field name="context_import">{
            "default_move_type": 'out_invoice',
            'default_partner_id': company.partner_id.id,
            'default_institution_partner_id': company.partner_id.id,
            'default_insurance_partner_id': company.partner_id.id,
            'default_journal_id': env["account.journal"].search([('type', '=', 'sale')], limit=1).id,
        }</field>
        <field name="sql_source">
    select 
         id as db_external_id,
         CONCAT('__import__.res_partner_id_', _paciente_id) as 'partner_id/id',
         CONCAT('__import__.res_partner_id_', _cia_id, 'institution') as 'institution_partner_id/id',
         CONCAT('__import__.res_partner_id_', _seguro_id, 'insurence') as 'insurance_partner_id/id',
         numerofactrua as name,
         autorizacion_sesguro as insurance_authorization,
         polizaseguro as insurance_policy,
         carnet_seguro as affiliate_number,
         comprobante as l10n_do_ncf,
         estado as db_external_state,
         CASE
            WHEN comprobante is null THEN '02'
            ELSE SUBSTRING(comprobante, 2, 2)
         END AS l10n_do_ncf_code,
         fecha as invoice_date,
         'out_invoice' as move_type,
         (select TOP 1
              CASE
                WHEN _depatamento_id is null THEN 'product.product_category_all'
                WHEN LEN(_depatamento_id) = 0 THEN 'product.product_category_all'
                ELSE CONCAT('__import__.product_category_id_', _depatamento_id)
              END
            FROM articulo where id = _articulo_id
         ) as 'product_categ_id/id'
      from Factura
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="account.model_account_move"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
        <field name="fields_ids" eval="[
            (4, ref('diagnosis.field_account_move__institution_partner_id')),
            (4, ref('diagnosis.field_account_move__insurance_partner_id')),
            (4, ref('account.field_account_move__partner_id')),
            (4, ref('account.field_account_move__journal_id')),
        ]"/>
    </record>

    <record id="import_invoice_lines" model="import.odbc.dbtable">
        <field name="exec_order" eval="20"/>
        <field name="name">Sincronizar lineas de facturas</field>
        <field name="enabled" eval="True"/>
        <field name="context_import">{"check_move_validity": False}</field>
        <field name="sql_source">
        SELECT 
             id as db_external_id,
             CONCAT('__import__.account_move_id_', id) as "move_id/id",
             CONCAT('__import__.product_product_id_', _articulo_id) as 'product_id/id',
             ISNULL(cantidadarticulo, 1) as quantity,
             ISNULL(montobruto, 0) as price_unit,
             ISNULL(montoseguro, 0) as insurance_coverage
            from Factura
        </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="account.model_account_move_line"/>
        <field name="fields_ids" eval="[
            (4, ref('account.field_account_move_line__analytic_account_id')),
            (4, ref('account.field_account_move_line__account_id')),
            (4, ref('account.field_account_move_line__name'))
        ]"/>
        <field name="onchange_related_fields_ids" eval="[
            (4, ref('account.field_account_move_line__move_id')),
        ]"/>
        <field name="onchange_fields" eval="[
            (4, ref('account.field_account_move__invoice_line_ids')),
        ]"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

     <record id="import_suppliers" model="import.odbc.dbtable">
        <field name="exec_order" eval="21"/>
        <field name="name">Sincronizar proveedores</field>
        <field name="xml_id_cols">db_external_id,partner_type</field>
        <field name="enabled" eval="True"/>
        <field name="sql_source">
    select 
        idSuplidor as db_external_id,
        CASE
            WHEN nombre is null THEN CONCAT('Proveedor S/N ID ', idSuplidor)
            WHEN LEN(nombre) = 0 THEN CONCAT('Proveedor S/N ID ', idSuplidor)
            WHEN LEN(nombre) &lt;=2 AND nombre like '%[^a-Z0-9]%' THEN CONCAT('Proveedor S/N ID ', idSuplidor)
            ELSE CONCAT(nombre, ' ', apellido)
        END AS name,
        telefono as phone,
        'contact' as partner_type,
        1 as supplier_rank
    from suplidores
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="base.model_res_partner"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>
    
    <record id="import_invoice_supplier" model="import.odbc.dbtable">
        <field name="exec_order" eval="30"/>
        <field name="name">Sincronizar Facturas de proveedor</field>
        <field name="xml_id_cols">db_external_id,move_type</field>
        <field name="enabled" eval="True"/>
        <field name="context_import">{
            "default_move_type": 'in_invoice',
            'default_partner_id': company.partner_id.id,
            'default_journal_id': env["account.journal"].search([('type', '=', 'purchase')], limit=1).id,
            }</field>
        <field name="sql_source">
    select 
         _id_proveedor as db_external_id,
         CONCAT('__import__.res_partner_id_', id_proveedor, 'contact') as 'partner_id/id',
         nfc as l10n_do_ncf,
         CASE
            WHEN nfc is null THEN '01'
            ELSE SUBSTRING(nfc, 2, 2)
         END AS l10n_do_ncf_supplier_code,
         fecha_factura as invoice_date,
         'in_invoice' as move_type
      from FacturaProveedor
    </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="account.model_account_move"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
        <field name="fields_ids" eval="[
            (4, ref('account.field_account_move__partner_id')),
            (4, ref('account.field_account_move__journal_id')),
        ]"/>
    </record>
    
    <record id="import_invoice_lines_suppleirs" model="import.odbc.dbtable">
        <field name="exec_order" eval="35"/>
        <field name="name">Sincronizar lineas de facturas de proveedor</field>
        <field name="enabled" eval="True"/>
        <field name="xml_id_cols">db_external_id,move_id/id</field>
        <field name="context_import">{"check_move_validity": False}</field>
        <field name="sql_source">
        SELECT 
             _id_proveedor as db_external_id,
             CONCAT('__import__.account_move_id_', _id_proveedor, 'in_invoice') as "move_id/id",
             CONCAT('__import__.product_product_id_', id_articulo) as 'product_id/id',
             ISNULL(cantidad_articulo, 1) as quantity,
             ISNULL(precio_unitario, 0) as price_unit
            from FacturaProveedor
        </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="account.model_account_move_line"/>
        <field name="fields_ids" eval="[
            (4, ref('account.field_account_move_line__account_id')),
            (4, ref('account.field_account_move_line__name'))
        ]"/>
        <field name="onchange_related_fields_ids" eval="[
            (4, ref('account.field_account_move_line__move_id')),
        ]"/>
        <field name="onchange_fields" eval="[
            (4, ref('account.field_account_move__invoice_line_ids')),
        ]"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

    <record id="import_payments" model="import.odbc.dbtable">
        <field name="exec_order" eval="40"/>
        <field name="name">Sincronizar pagos</field>
        <field name="xml_id_cols">db_external_id,payment_type</field>
        <field name="enabled" eval="True"/>
        <field name="context_import">{
            'default_payment_type': 'inbound',
            'default_partner_type': 'customer',
            'default_move_journal_types': ('bank', 'cash'),
            'default_partner_id': company.partner_id.id,
            }</field>
        <field name="sql_source">
        SELECT 
            pg.id as db_external_id,
            CONCAT('__import__.res_partner_id_', fact._paciente_id) as 'partner_id/id',
            pg.estado as db_external_state,
            CASE
                WHEN pg._factura_id is null THEN null
                ELSE CONCAT('__import__.account_move_id_', pg._factura_id) 
             END AS 'move_reconcile_line/id',
            CASE
                WHEN pg.idseguro is null THEN null
                ELSE CONCAT('__import__.res_partner_id_', pg.idseguro, 'insurence')
             END AS 'insurance_partner_id/id',
             ISNULL(pg.valor, 0) as amount,
             pg.caja_afectada as affected_box,
             pg.fecha_recibo as date,
             'inbound' as payment_type,
             'Cash' as journal_id,
            CASE
                WHEN pg.formadepago = 1 THEN 'l10n_do_check.account_payment_method_manual_sale_cash'
                WHEN pg.formadepago = 2 THEN 'l10n_do_check.account_payment_method_manual_sale_cheq_trans_dep'
                WHEN pg.formadepago = 3 THEN 'l10n_do_check.account_payment_method_manual_sale_card'
                ELSE 'account.account_payment_method_manual_in'
            END AS 'payment_method_id/id',
            CASE
                WHEN iddepto is null THEN 'product.product_category_all'
                WHEN LEN(iddepto) = 0 THEN 'product.product_category_all'
                ELSE CONCAT('__import__.product_category_id_', iddepto)
                END as 'product_categ_id/id'
            from Pagos as pg
            JOIN Factura as fact ON fact.id = pg._factura_id
        </field>
        <field name="dbsource_id" ref="base_external_tds"/>
        <field name="model_target" ref="account.model_account_payment"/>
        <field name="fields_ids" eval="[
            (4, ref('account.field_account_payment__journal_id')),
            (4, ref('account.field_account_payment__payment_method_id')),
            (4, ref('account.field_account_move__partner_id'))
        ]"/>
        <field name="action_server_ids" eval="[
            (4, ref('diagnosis.action_confirm_pand_reconciled_ayments'))
        ]"/>
        <field name="skip_cron_start">8.0</field>
        <field name="skip_cron_stop">22</field>
    </record>

</odoo>
